@model Gestion_Centre_Formations.Models.SignUpModel

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card shadow-lg border-0 rounded-lg">
                <div class="card-header bg-gradient-primary text-center py-4">
                    <h3 class="text-white">User Registration</h3>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("SignUp", "Authentification", FormMethod.Post, new { id = "signupForm" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="btn-group mb-4 w-100" role="group">
                            <input type="radio" class="btn-check" name="UserType" id="participantType" value="Participant" autocomplete="off" checked>
                            <label class="btn btn-outline-primary" for="participantType">
                                <i class="bi bi-person-plus me-2"></i>Participant
                            </label>

                            <input type="radio" class="btn-check" name="UserType" id="formateurType" value="Formateur" autocomplete="off">
                            <label class="btn btn-outline-primary" for="formateurType">
                                <i class="bi bi-person-workspace me-2"></i>Formateur
                            </label>
                        </div>

                        <div class="mb-3 row">
                            <label for="Prenom" class="col-sm-4 col-form-label">First Name</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.Prenom, new { @class = "form-control", placeholder = "" })
                                @Html.ValidationMessageFor(m => m.Prenom, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mb-3 row">
                            <label for="Nom" class="col-sm-4 col-form-label">Last Name</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.Nom, new { @class = "form-control", placeholder = "" })
                                @Html.ValidationMessageFor(m => m.Nom, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mb-3 row">
                            <label for="Email" class="col-sm-4 col-form-label">Email Address</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mb-3 row">
                            <label for="NumTel" class="col-sm-4 col-form-label">Phone Number</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.NumTel, new { @class = "form-control", placeholder = "" })
                                @Html.ValidationMessageFor(m => m.NumTel, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mb-3 row">
                            <label for="Password" class="col-sm-4 col-form-label">Password</label>
                            <div class="col-sm-8">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="mb-3 row">
                            <label for="ConfirmPassword" class="col-sm-4 col-form-label">Confirm Password</label>
                            <div class="col-sm-8">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "" })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div id="specialisationContainer" class="mb-3 row">
                            <label for="Specialisation" class="col-sm-4 col-form-label">Specialisation</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(m => m.Specialisation, new { @class = "form-control", placeholder = "" })
                                @Html.ValidationMessageFor(m => m.Specialisation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-arrow-right-circle me-2"></i>Register
                            </button>
                        </div>
                    }
                </div>
                <div class="card-footer text-center py-3">
                    <p class="text-muted mb-2">Already have an account?</p>
                    <a href="@Url.Action("Login", "Authentification")" class="btn btn-outline-secondary btn-sm">
                        <i class="bi bi-box-arrow-in-right me-2"></i>Log In
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const participantRadio = document.getElementById('participantType');
        const formateurRadio = document.getElementById('formateurType');
        const specialisationContainer = document.getElementById('specialisationContainer');

        // Function to update the visibility of the specialisation container
        function updateSpecialisationVisibility() {
            if (formateurRadio.checked) {
                specialisationContainer.style.display = 'flex';
            } else {
                specialisationContainer.style.display = 'none';
            }
        }

        // Check the initial state when the page loads
        updateSpecialisationVisibility();

        // Add event listeners for when the radio buttons change
        formateurRadio.addEventListener('change', updateSpecialisationVisibility);
        participantRadio.addEventListener('change', updateSpecialisationVisibility);
    });

</script>

<style>
    .bg-gradient-primary {
        background: linear-gradient(to right, #0D6EFD 0%, #4792ff 100%);
    }

    .card {
        transform: translateY(0);
        transition: transform 0.3s ease-in-out;
    }

    .form-control {
        border-radius: 1.25rem;
        box-shadow: none;
        border: 1px solid #d1d3e2;
        font-size: 1rem;
    }

        .form-control:focus {
            border-color: #4e73df;
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }

    .col-form-label {
        font-weight: bold;
        color: #4e73df;
    }

    .btn-outline-primary {
        border-radius: 1.25rem;
        transition: all 0.3s ease;
    }

        .btn-outline-primary:hover {
            background-color: #4e73df;
            color: #fff;
        }

    .btn-group label {
        border-radius: 1.25rem;
    }

    .btn-group input:checked + label {
        background-color: #4e73df;
        color: #fff;
    }
</style>

<!-- Bootstrap CSS and Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
